/*
 * generated by Xtext 2.11.0
 */
grammar InternalPaplj;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.metaborg.paplj.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.metaborg.paplj.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.metaborg.paplj.services.PapljGrammarAccess;

}
@parser::members {
	private PapljGrammarAccess grammarAccess;

	public void setGrammarAccess(PapljGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMember
entryRuleMember
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberAccess().getAlternatives()); }
		(rule__Member__Alternatives)
		{ after(grammarAccess.getMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam
entryRuleParam
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAccess().getGroup()); }
		(rule__Param__Group__0)
		{ after(grammarAccess.getParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinding
entryRuleBinding
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingAccess().getGroup()); }
		(rule__Binding__Group__0)
		{ after(grammarAccess.getBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock2
entryRuleBlock2
:
{ before(grammarAccess.getBlock2Rule()); }
	 ruleBlock2
{ after(grammarAccess.getBlock2Rule()); } 
	 EOF 
;

// Rule Block2
ruleBlock2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlock2Access().getGroup()); }
		(rule__Block2__Group__0)
		{ after(grammarAccess.getBlock2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getIfLetExprParserRuleCall()); }
		ruleIfLetExpr
		{ after(grammarAccess.getExprAccess().getIfLetExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfLetExpr
entryRuleIfLetExpr
:
{ before(grammarAccess.getIfLetExprRule()); }
	 ruleIfLetExpr
{ after(grammarAccess.getIfLetExprRule()); } 
	 EOF 
;

// Rule IfLetExpr
ruleIfLetExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfLetExprAccess().getAlternatives()); }
		(rule__IfLetExpr__Alternatives)
		{ after(grammarAccess.getIfLetExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentExpr
entryRuleAssignmentExpr
:
{ before(grammarAccess.getAssignmentExprRule()); }
	 ruleAssignmentExpr
{ after(grammarAccess.getAssignmentExprRule()); } 
	 EOF 
;

// Rule AssignmentExpr
ruleAssignmentExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentExprAccess().getGroup()); }
		(rule__AssignmentExpr__Group__0)
		{ after(grammarAccess.getAssignmentExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOrExpr
entryRuleLogicalOrExpr
:
{ before(grammarAccess.getLogicalOrExprRule()); }
	 ruleLogicalOrExpr
{ after(grammarAccess.getLogicalOrExprRule()); } 
	 EOF 
;

// Rule LogicalOrExpr
ruleLogicalOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrExprAccess().getGroup()); }
		(rule__LogicalOrExpr__Group__0)
		{ after(grammarAccess.getLogicalOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAndExpr
entryRuleLogicalAndExpr
:
{ before(grammarAccess.getLogicalAndExprRule()); }
	 ruleLogicalAndExpr
{ after(grammarAccess.getLogicalAndExprRule()); } 
	 EOF 
;

// Rule LogicalAndExpr
ruleLogicalAndExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndExprAccess().getGroup()); }
		(rule__LogicalAndExpr__Group__0)
		{ after(grammarAccess.getLogicalAndExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparativeExpr
entryRuleComparativeExpr
:
{ before(grammarAccess.getComparativeExprRule()); }
	 ruleComparativeExpr
{ after(grammarAccess.getComparativeExprRule()); } 
	 EOF 
;

// Rule ComparativeExpr
ruleComparativeExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparativeExprAccess().getGroup()); }
		(rule__ComparativeExpr__Group__0)
		{ after(grammarAccess.getComparativeExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpr
entryRuleAdditiveExpr
:
{ before(grammarAccess.getAdditiveExprRule()); }
	 ruleAdditiveExpr
{ after(grammarAccess.getAdditiveExprRule()); } 
	 EOF 
;

// Rule AdditiveExpr
ruleAdditiveExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExprAccess().getGroup()); }
		(rule__AdditiveExpr__Group__0)
		{ after(grammarAccess.getAdditiveExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpr
entryRuleMultiplicativeExpr
:
{ before(grammarAccess.getMultiplicativeExprRule()); }
	 ruleMultiplicativeExpr
{ after(grammarAccess.getMultiplicativeExprRule()); } 
	 EOF 
;

// Rule MultiplicativeExpr
ruleMultiplicativeExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
		(rule__MultiplicativeExpr__Group__0)
		{ after(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMemberExpr
entryRuleMemberExpr
:
{ before(grammarAccess.getMemberExprRule()); }
	 ruleMemberExpr
{ after(grammarAccess.getMemberExprRule()); } 
	 EOF 
;

// Rule MemberExpr
ruleMemberExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberExprAccess().getGroup()); }
		(rule__MemberExpr__Group__0)
		{ after(grammarAccess.getMemberExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLet
entryRuleLet
:
{ before(grammarAccess.getLetRule()); }
	 ruleLet
{ after(grammarAccess.getLetRule()); } 
	 EOF 
;

// Rule Let
ruleLet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetAccess().getGroup()); }
		(rule__Let__Group__0)
		{ after(grammarAccess.getLetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
		ruleField
		{ after(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
		ruleMethod
		{ after(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfLetExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfLetExprAccess().getIfParserRuleCall_0()); }
		ruleIf
		{ after(grammarAccess.getIfLetExprAccess().getIfParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfLetExprAccess().getLetParserRuleCall_1()); }
		ruleLet
		{ after(grammarAccess.getIfLetExprAccess().getLetParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIfLetExprAccess().getAssignmentExprParserRuleCall_2()); }
		ruleAssignmentExpr
		{ after(grammarAccess.getIfLetExprAccess().getAssignmentExprParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparativeExprAccess().getGroup_1_0_0()); }
		(rule__ComparativeExpr__Group_1_0_0__0)
		{ after(grammarAccess.getComparativeExprAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparativeExprAccess().getGroup_1_0_1()); }
		(rule__ComparativeExpr__Group_1_0_1__0)
		{ after(grammarAccess.getComparativeExprAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparativeExprAccess().getGroup_1_0_2()); }
		(rule__ComparativeExpr__Group_1_0_2__0)
		{ after(grammarAccess.getComparativeExprAccess().getGroup_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExprAccess().getGroup_1_0_0()); }
		(rule__AdditiveExpr__Group_1_0_0__0)
		{ after(grammarAccess.getAdditiveExprAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExprAccess().getGroup_1_0_1()); }
		(rule__AdditiveExpr__Group_1_0_1__0)
		{ after(grammarAccess.getAdditiveExprAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_0()); }
		(rule__MultiplicativeExpr__Group_1_0_0__0)
		{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_1()); }
		(rule__MultiplicativeExpr__Group_1_0_1__0)
		{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_0()); }
		(rule__UnaryExpr__Group_0__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
		(rule__UnaryExpr__Group_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_2()); }
		(rule__UnaryExpr__Group_2__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
		(rule__PrimaryExpr__Group_0__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
		(rule__PrimaryExpr__Group_1__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
		(rule__PrimaryExpr__Group_2__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_3()); }
		(rule__PrimaryExpr__Group_3__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_4()); }
		(rule__PrimaryExpr__Group_4__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_5()); }
		(rule__PrimaryExpr__Group_5__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getBlock2ParserRuleCall_6()); }
		ruleBlock2
		{ after(grammarAccess.getPrimaryExprAccess().getBlock2ParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_7()); }
		(rule__PrimaryExpr__Group_7__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getTrueAssignment_1_1_0()); }
		(rule__PrimaryExpr__TrueAssignment_1_1_0)
		{ after(grammarAccess.getPrimaryExprAccess().getTrueAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getFalseKeyword_1_1_1()); }
		'false'
		{ after(grammarAccess.getPrimaryExprAccess().getFalseKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_0()); }
	(rule__Program__Group_0__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getImportsAssignment_1()); }
	(rule__Program__ImportsAssignment_1)*
	{ after(grammarAccess.getProgramAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getClassesAssignment_2()); }
	(rule__Program__ClassesAssignment_2)*
	{ after(grammarAccess.getProgramAccess().getClassesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGroup_3()); }
	(rule__Program__Group_3__0)?
	{ after(grammarAccess.getProgramAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_0__0__Impl
	rule__Program__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramKeyword_0_0()); }
	'program'
	{ after(grammarAccess.getProgramAccess().getProgramKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_0__1__Impl
	rule__Program__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_0_1()); }
	(rule__Program__NameAssignment_0_1)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getSemicolonKeyword_0_2()); }
	(';')?
	{ after(grammarAccess.getProgramAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_3__0__Impl
	rule__Program__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRunKeyword_3_0()); }
	'run'
	{ after(grammarAccess.getProgramAccess().getRunKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getExprAssignment_3_1()); }
	(rule__Program__ExprAssignment_3_1)
	{ after(grammarAccess.getProgramAccess().getExprAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
	(';')?
	{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getTypeAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
	(rule__Type__NameAssignment_1)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_2()); }
	(rule__Type__Group_2__0)?
	{ after(grammarAccess.getTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__3__Impl
	rule__Type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__4__Impl
	rule__Type__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getMembersAssignment_4()); }
	(rule__Type__MembersAssignment_4)*
	{ after(grammarAccess.getTypeAccess().getMembersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getTypeAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSuperTypeAssignment_2_1()); }
	(rule__Type__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
	(rule__Field__TypeAssignment_0)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
	(rule__Field__NameAssignment_1)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }
	(';')?
	{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
	(rule__Method__TypeAssignment_0)
	{ after(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_1()); }
	(rule__Method__NameAssignment_1)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_3()); }
	(rule__Method__Group_3__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getBodyAssignment_5()); }
	(rule__Method__BodyAssignment_5)
	{ after(grammarAccess.getMethodAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3__0__Impl
	rule__Method__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
	(rule__Method__ParamsAssignment_3_0)
	{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_3_1()); }
	(rule__Method__Group_3_1__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3_1__0__Impl
	rule__Method__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
	(rule__Method__ParamsAssignment_3_1_1)
	{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getTypeAssignment_0()); }
	(rule__Param__TypeAssignment_0)
	{ after(grammarAccess.getParamAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getNameAssignment_1()); }
	(rule__Param__NameAssignment_1)
	{ after(grammarAccess.getParamAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getTypeAssignment_0()); }
	(rule__Binding__TypeAssignment_0)
	{ after(grammarAccess.getBindingAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getNameAssignment_1()); }
	(rule__Binding__NameAssignment_1)
	{ after(grammarAccess.getBindingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__2__Impl
	rule__Binding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getBindingAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getValueAssignment_3()); }
	(rule__Binding__ValueAssignment_3)
	{ after(grammarAccess.getBindingAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group__0__Impl
	rule__Block2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getBlock2Action_0()); }
	()
	{ after(grammarAccess.getBlock2Access().getBlock2Action_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group__1__Impl
	rule__Block2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBlock2Access().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group__2__Impl
	rule__Block2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getGroup_2()); }
	(rule__Block2__Group_2__0)?
	{ after(grammarAccess.getBlock2Access().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group__3__Impl
	rule__Block2__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getSemicolonKeyword_3()); }
	(';')?
	{ after(grammarAccess.getBlock2Access().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBlock2Access().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block2__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group_2__0__Impl
	rule__Block2__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getExprsAssignment_2_0()); }
	(rule__Block2__ExprsAssignment_2_0)
	{ after(grammarAccess.getBlock2Access().getExprsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getGroup_2_1()); }
	(rule__Block2__Group_2_1__0)*
	{ after(grammarAccess.getBlock2Access().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block2__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group_2_1__0__Impl
	rule__Block2__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getSemicolonKeyword_2_1_0()); }
	';'
	{ after(grammarAccess.getBlock2Access().getSemicolonKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block2__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlock2Access().getExprsAssignment_2_1_1()); }
	(rule__Block2__ExprsAssignment_2_1_1)
	{ after(grammarAccess.getBlock2Access().getExprsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpr__Group__0__Impl
	rule__AssignmentExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExprAccess().getLogicalOrExprParserRuleCall_0()); }
	ruleLogicalOrExpr
	{ after(grammarAccess.getAssignmentExprAccess().getLogicalOrExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExprAccess().getGroup_1()); }
	(rule__AssignmentExpr__Group_1__0)?
	{ after(grammarAccess.getAssignmentExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpr__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExprAccess().getGroup_1_0()); }
	(rule__AssignmentExpr__Group_1_0__0)
	{ after(grammarAccess.getAssignmentExprAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpr__Group_1_0__0__Impl
	rule__AssignmentExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExprAccess().getAssignmentLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getAssignmentExprAccess().getAssignmentLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpr__Group_1_0__1__Impl
	rule__AssignmentExpr__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExprAccess().getEqualsSignKeyword_1_0_1()); }
	'='
	{ after(grammarAccess.getAssignmentExprAccess().getEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpr__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExprAccess().getValueAssignment_1_0_2()); }
	(rule__AssignmentExpr__ValueAssignment_1_0_2)
	{ after(grammarAccess.getAssignmentExprAccess().getValueAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpr__Group__0__Impl
	rule__LogicalOrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExprAccess().getLogicalAndExprParserRuleCall_0()); }
	ruleLogicalAndExpr
	{ after(grammarAccess.getLogicalOrExprAccess().getLogicalAndExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExprAccess().getGroup_1()); }
	(rule__LogicalOrExpr__Group_1__0)*
	{ after(grammarAccess.getLogicalOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpr__Group_1__0__Impl
	rule__LogicalOrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExprAccess().getGroup_1_0()); }
	(rule__LogicalOrExpr__Group_1_0__0)
	{ after(grammarAccess.getLogicalOrExprAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExprAccess().getRightAssignment_1_1()); }
	(rule__LogicalOrExpr__RightAssignment_1_1)
	{ after(grammarAccess.getLogicalOrExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpr__Group_1_0__0__Impl
	rule__LogicalOrExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExprAccess().getOrLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLogicalOrExprAccess().getOrLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExprAccess().getVerticalLineVerticalLineKeyword_1_0_1()); }
	'||'
	{ after(grammarAccess.getLogicalOrExprAccess().getVerticalLineVerticalLineKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpr__Group__0__Impl
	rule__LogicalAndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExprAccess().getComparativeExprParserRuleCall_0()); }
	ruleComparativeExpr
	{ after(grammarAccess.getLogicalAndExprAccess().getComparativeExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExprAccess().getGroup_1()); }
	(rule__LogicalAndExpr__Group_1__0)*
	{ after(grammarAccess.getLogicalAndExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpr__Group_1__0__Impl
	rule__LogicalAndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExprAccess().getGroup_1_0()); }
	(rule__LogicalAndExpr__Group_1_0__0)
	{ after(grammarAccess.getLogicalAndExprAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExprAccess().getRightAssignment_1_1()); }
	(rule__LogicalAndExpr__RightAssignment_1_1)
	{ after(grammarAccess.getLogicalAndExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpr__Group_1_0__0__Impl
	rule__LogicalAndExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExprAccess().getAndLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getLogicalAndExprAccess().getAndLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExprAccess().getAmpersandAmpersandKeyword_1_0_1()); }
	'&&'
	{ after(grammarAccess.getLogicalAndExprAccess().getAmpersandAmpersandKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparativeExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group__0__Impl
	rule__ComparativeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getAdditiveExprParserRuleCall_0()); }
	ruleAdditiveExpr
	{ after(grammarAccess.getComparativeExprAccess().getAdditiveExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getGroup_1()); }
	(rule__ComparativeExpr__Group_1__0)?
	{ after(grammarAccess.getComparativeExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparativeExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1__0__Impl
	rule__ComparativeExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getAlternatives_1_0()); }
	(rule__ComparativeExpr__Alternatives_1_0)
	{ after(grammarAccess.getComparativeExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getRightAssignment_1_1()); }
	(rule__ComparativeExpr__RightAssignment_1_1)
	{ after(grammarAccess.getComparativeExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparativeExpr__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1_0_0__0__Impl
	rule__ComparativeExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getEqLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getComparativeExprAccess().getEqLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
	'=='
	{ after(grammarAccess.getComparativeExprAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparativeExpr__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1_0_1__0__Impl
	rule__ComparativeExpr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getNeqLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getComparativeExprAccess().getNeqLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
	'!='
	{ after(grammarAccess.getComparativeExprAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparativeExpr__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1_0_2__0__Impl
	rule__ComparativeExpr__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getLtLeftAction_1_0_2_0()); }
	()
	{ after(grammarAccess.getComparativeExprAccess().getLtLeftAction_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparativeExpr__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparativeExprAccess().getLessThanSignKeyword_1_0_2_1()); }
	'<'
	{ after(grammarAccess.getComparativeExprAccess().getLessThanSignKeyword_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group__0__Impl
	rule__AdditiveExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
	ruleMultiplicativeExpr
	{ after(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
	(rule__AdditiveExpr__Group_1__0)*
	{ after(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1__0__Impl
	rule__AdditiveExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getAlternatives_1_0()); }
	(rule__AdditiveExpr__Alternatives_1_0)
	{ after(grammarAccess.getAdditiveExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_1()); }
	(rule__AdditiveExpr__RightAssignment_1_1)
	{ after(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1_0_0__0__Impl
	rule__AdditiveExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getAddLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAdditiveExprAccess().getAddLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getAdditiveExprAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1_0_1__0__Impl
	rule__AdditiveExpr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getSubLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExprAccess().getSubLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExprAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getAdditiveExprAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group__0__Impl
	rule__MultiplicativeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
	{ after(grammarAccess.getMultiplicativeExprAccess().getUnaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
	(rule__MultiplicativeExpr__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1__0__Impl
	rule__MultiplicativeExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getAlternatives_1_0()); }
	(rule__MultiplicativeExpr__Alternatives_1_0)
	{ after(grammarAccess.getMultiplicativeExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_1()); }
	(rule__MultiplicativeExpr__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1_0_0__0__Impl
	rule__MultiplicativeExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getMulLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExprAccess().getMulLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMultiplicativeExprAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1_0_1__0__Impl
	rule__MultiplicativeExpr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getDivLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExprAccess().getDivLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExprAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMultiplicativeExprAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__0__Impl
	rule__UnaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getMemberExprParserRuleCall_0_0()); }
	ruleMemberExpr
	{ after(grammarAccess.getUnaryExprAccess().getMemberExprParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getGroup_0_1()); }
	(rule__UnaryExpr__Group_0_1__0)?
	{ after(grammarAccess.getUnaryExprAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_1__0__Impl
	rule__UnaryExpr__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getGroup_0_1_0()); }
	(rule__UnaryExpr__Group_0_1_0__0)
	{ after(grammarAccess.getUnaryExprAccess().getGroup_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getTypeAssignment_0_1_1()); }
	(rule__UnaryExpr__TypeAssignment_0_1_1)
	{ after(grammarAccess.getUnaryExprAccess().getTypeAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_1_0__0__Impl
	rule__UnaryExpr__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getCastLeftAction_0_1_0_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getCastLeftAction_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getAsKeyword_0_1_0_1()); }
	'as'
	{ after(grammarAccess.getUnaryExprAccess().getAsKeyword_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__1__Impl
	rule__UnaryExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_1_2()); }
	(rule__UnaryExpr__ExprAssignment_1_2)
	{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_2__0__Impl
	rule__UnaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getMinAction_2_0()); }
	()
	{ after(grammarAccess.getUnaryExprAccess().getMinAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_2__1__Impl
	rule__UnaryExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_2_1()); }
	'-'
	{ after(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getExprAssignment_2_2()); }
	(rule__UnaryExpr__ExprAssignment_2_2)
	{ after(grammarAccess.getUnaryExprAccess().getExprAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group__0__Impl
	rule__MemberExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getPrimaryExprParserRuleCall_0()); }
	rulePrimaryExpr
	{ after(grammarAccess.getMemberExprAccess().getPrimaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getGroup_1()); }
	(rule__MemberExpr__Group_1__0)*
	{ after(grammarAccess.getMemberExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getGroup_1_0()); }
	(rule__MemberExpr__Group_1_0__0)
	{ after(grammarAccess.getMemberExprAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0__0__Impl
	rule__MemberExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getMemberRefLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getMemberExprAccess().getMemberRefLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0__1__Impl
	rule__MemberExpr__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getFullStopKeyword_1_0_1()); }
	'.'
	{ after(grammarAccess.getMemberExprAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0__2__Impl
	rule__MemberExpr__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getMemberAssignment_1_0_2()); }
	(rule__MemberExpr__MemberAssignment_1_0_2)
	{ after(grammarAccess.getMemberExprAccess().getMemberAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getGroup_1_0_3()); }
	(rule__MemberExpr__Group_1_0_3__0)?
	{ after(grammarAccess.getMemberExprAccess().getGroup_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpr__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0_3__0__Impl
	rule__MemberExpr__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getMethodInvocationAssignment_1_0_3_0()); }
	(rule__MemberExpr__MethodInvocationAssignment_1_0_3_0)
	{ after(grammarAccess.getMemberExprAccess().getMethodInvocationAssignment_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0_3__1__Impl
	rule__MemberExpr__Group_1_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getGroup_1_0_3_1()); }
	(rule__MemberExpr__Group_1_0_3_1__0)?
	{ after(grammarAccess.getMemberExprAccess().getGroup_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getRightParenthesisKeyword_1_0_3_2()); }
	')'
	{ after(grammarAccess.getMemberExprAccess().getRightParenthesisKeyword_1_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpr__Group_1_0_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0_3_1__0__Impl
	rule__MemberExpr__Group_1_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getArgsAssignment_1_0_3_1_0()); }
	(rule__MemberExpr__ArgsAssignment_1_0_3_1_0)
	{ after(grammarAccess.getMemberExprAccess().getArgsAssignment_1_0_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getGroup_1_0_3_1_1()); }
	(rule__MemberExpr__Group_1_0_3_1_1__0)*
	{ after(grammarAccess.getMemberExprAccess().getGroup_1_0_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MemberExpr__Group_1_0_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0_3_1_1__0__Impl
	rule__MemberExpr__Group_1_0_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getCommaKeyword_1_0_3_1_1_0()); }
	','
	{ after(grammarAccess.getMemberExprAccess().getCommaKeyword_1_0_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MemberExpr__Group_1_0_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__Group_1_0_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberExprAccess().getArgsAssignment_1_0_3_1_1_1()); }
	(rule__MemberExpr__ArgsAssignment_1_0_3_1_1_1)
	{ after(grammarAccess.getMemberExprAccess().getArgsAssignment_1_0_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__0__Impl
	rule__PrimaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getNumAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryExprAccess().getNumAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getValueAssignment_0_1()); }
	(rule__PrimaryExpr__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimaryExprAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__0__Impl
	rule__PrimaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getBoolAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExprAccess().getBoolAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getAlternatives_1_1()); }
	(rule__PrimaryExpr__Alternatives_1_1)
	{ after(grammarAccess.getPrimaryExprAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__0__Impl
	rule__PrimaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getThisAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryExprAccess().getThisAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getThisKeyword_2_1()); }
	'this'
	{ after(grammarAccess.getPrimaryExprAccess().getThisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_3__0__Impl
	rule__PrimaryExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getNullAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryExprAccess().getNullAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_3__1__Impl
	rule__PrimaryExpr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getNullKeyword_3_1()); }
	'null'
	{ after(grammarAccess.getPrimaryExprAccess().getNullKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getTypeAssignment_3_2()); }
	(rule__PrimaryExpr__TypeAssignment_3_2)?
	{ after(grammarAccess.getPrimaryExprAccess().getTypeAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__0__Impl
	rule__PrimaryExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getNewAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryExprAccess().getNewAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__1__Impl
	rule__PrimaryExpr__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getNewKeyword_4_1()); }
	'new'
	{ after(grammarAccess.getPrimaryExprAccess().getNewKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__2__Impl
	rule__PrimaryExpr__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getTypeAssignment_4_2()); }
	(rule__PrimaryExpr__TypeAssignment_4_2)
	{ after(grammarAccess.getPrimaryExprAccess().getTypeAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__3__Impl
	rule__PrimaryExpr__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_4_3()); }
	'('
	{ after(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5__0__Impl
	rule__PrimaryExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getVarAction_5_0()); }
	()
	{ after(grammarAccess.getPrimaryExprAccess().getVarAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5__1__Impl
	rule__PrimaryExpr__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getMemberAssignment_5_1()); }
	(rule__PrimaryExpr__MemberAssignment_5_1)
	{ after(grammarAccess.getPrimaryExprAccess().getMemberAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getGroup_5_2()); }
	(rule__PrimaryExpr__Group_5_2__0)?
	{ after(grammarAccess.getPrimaryExprAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5_2__0__Impl
	rule__PrimaryExpr__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getMethodInvocationAssignment_5_2_0()); }
	(rule__PrimaryExpr__MethodInvocationAssignment_5_2_0)
	{ after(grammarAccess.getPrimaryExprAccess().getMethodInvocationAssignment_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5_2__1__Impl
	rule__PrimaryExpr__Group_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getGroup_5_2_1()); }
	(rule__PrimaryExpr__Group_5_2_1__0)?
	{ after(grammarAccess.getPrimaryExprAccess().getGroup_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_5_2_2()); }
	')'
	{ after(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_5_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_5_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5_2_1__0__Impl
	rule__PrimaryExpr__Group_5_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getArgsAssignment_5_2_1_0()); }
	(rule__PrimaryExpr__ArgsAssignment_5_2_1_0)
	{ after(grammarAccess.getPrimaryExprAccess().getArgsAssignment_5_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getGroup_5_2_1_1()); }
	(rule__PrimaryExpr__Group_5_2_1_1__0)*
	{ after(grammarAccess.getPrimaryExprAccess().getGroup_5_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_5_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5_2_1_1__0__Impl
	rule__PrimaryExpr__Group_5_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getCommaKeyword_5_2_1_1_0()); }
	','
	{ after(grammarAccess.getPrimaryExprAccess().getCommaKeyword_5_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_5_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_5_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getArgsAssignment_5_2_1_1_1()); }
	(rule__PrimaryExpr__ArgsAssignment_5_2_1_1_1)
	{ after(grammarAccess.getPrimaryExprAccess().getArgsAssignment_5_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_7__0__Impl
	rule__PrimaryExpr__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_7__1__Impl
	rule__PrimaryExpr__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getExprParserRuleCall_7_1()); }
	ruleExpr
	{ after(grammarAccess.getPrimaryExprAccess().getExprParserRuleCall_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_7_2()); }
	')'
	{ after(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getConditionAssignment_2()); }
	(rule__If__ConditionAssignment_2)
	{ after(grammarAccess.getIfAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getOnTrueAssignment_4()); }
	(rule__If__OnTrueAssignment_4)
	{ after(grammarAccess.getIfAccess().getOnTrueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__5__Impl
	rule__If__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseKeyword_5()); }
	'else'
	{ after(grammarAccess.getIfAccess().getElseKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getOnFalseAssignment_6()); }
	(rule__If__OnFalseAssignment_6)
	{ after(grammarAccess.getIfAccess().getOnFalseAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Let__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__0__Impl
	rule__Let__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__1__Impl
	rule__Let__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getBindingsAssignment_1()); }
	(rule__Let__BindingsAssignment_1)*
	{ after(grammarAccess.getLetAccess().getBindingsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__2__Impl
	rule__Let__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getLetAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getExprAssignment_3()); }
	(rule__Let__ExprAssignment_3)
	{ after(grammarAccess.getLetAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getProgramAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ClassesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getClassesTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getProgramAccess().getClassesTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ExprAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getExprExprParserRuleCall_3_1_0()); }
		ruleExpr
		{ after(grammarAccess.getProgramAccess().getExprExprParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSuperTypeTypeCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getSuperTypeTypeQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getTypeAccess().getSuperTypeTypeQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getTypeAccess().getSuperTypeTypeCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MembersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_4_0()); }
		ruleMember
		{ after(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getFieldAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFieldAccess().getTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMethodAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMethodAccess().getTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_3_0_0()); }
		ruleParam
		{ after(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_3_1_1_0()); }
		ruleParam
		{ after(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getBodyBlock2ParserRuleCall_5_0()); }
		ruleBlock2
		{ after(grammarAccess.getMethodAccess().getBodyBlock2ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getParamAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getParamAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getParamAccess().getTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getBindingAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getBindingAccess().getTypeTypeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getBindingAccess().getTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBindingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getValueExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getBindingAccess().getValueExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__ExprsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlock2Access().getExprsExprParserRuleCall_2_0_0()); }
		ruleExpr
		{ after(grammarAccess.getBlock2Access().getExprsExprParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block2__ExprsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlock2Access().getExprsExprParserRuleCall_2_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getBlock2Access().getExprsExprParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpr__ValueAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExprAccess().getValueExprParserRuleCall_1_0_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAssignmentExprAccess().getValueExprParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrExprAccess().getRightLogicalAndExprParserRuleCall_1_1_0()); }
		ruleLogicalAndExpr
		{ after(grammarAccess.getLogicalOrExprAccess().getRightLogicalAndExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndExprAccess().getRightComparativeExprParserRuleCall_1_1_0()); }
		ruleComparativeExpr
		{ after(grammarAccess.getLogicalAndExprAccess().getRightComparativeExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparativeExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparativeExprAccess().getRightAdditiveExprParserRuleCall_1_1_0()); }
		ruleAdditiveExpr
		{ after(grammarAccess.getComparativeExprAccess().getRightAdditiveExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_1_0()); }
		ruleMultiplicativeExpr
		{ after(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExprAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getMultiplicativeExprAccess().getRightUnaryExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__TypeAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getTypeTypeCrossReference_0_1_1_0()); }
		(
			{ before(grammarAccess.getUnaryExprAccess().getTypeTypeIDTerminalRuleCall_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnaryExprAccess().getTypeTypeIDTerminalRuleCall_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getUnaryExprAccess().getTypeTypeCrossReference_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_1_2_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__ExprAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_2_2_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__MemberAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberExprAccess().getMemberMemberCrossReference_1_0_2_0()); }
		(
			{ before(grammarAccess.getMemberExprAccess().getMemberMemberIDTerminalRuleCall_1_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMemberExprAccess().getMemberMemberIDTerminalRuleCall_1_0_2_0_1()); }
		)
		{ after(grammarAccess.getMemberExprAccess().getMemberMemberCrossReference_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__MethodInvocationAssignment_1_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberExprAccess().getMethodInvocationLeftParenthesisKeyword_1_0_3_0_0()); }
		(
			{ before(grammarAccess.getMemberExprAccess().getMethodInvocationLeftParenthesisKeyword_1_0_3_0_0()); }
			'('
			{ after(grammarAccess.getMemberExprAccess().getMethodInvocationLeftParenthesisKeyword_1_0_3_0_0()); }
		)
		{ after(grammarAccess.getMemberExprAccess().getMethodInvocationLeftParenthesisKeyword_1_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__ArgsAssignment_1_0_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberExprAccess().getArgsExprParserRuleCall_1_0_3_1_0_0()); }
		ruleExpr
		{ after(grammarAccess.getMemberExprAccess().getArgsExprParserRuleCall_1_0_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberExpr__ArgsAssignment_1_0_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberExprAccess().getArgsExprParserRuleCall_1_0_3_1_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getMemberExprAccess().getArgsExprParserRuleCall_1_0_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimaryExprAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__TrueAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getTrueTrueKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getPrimaryExprAccess().getTrueTrueKeyword_1_1_0_0()); }
			'true'
			{ after(grammarAccess.getPrimaryExprAccess().getTrueTrueKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getPrimaryExprAccess().getTrueTrueKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__TypeAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getTypeTypeCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getPrimaryExprAccess().getTypeTypeIDTerminalRuleCall_3_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryExprAccess().getTypeTypeIDTerminalRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getPrimaryExprAccess().getTypeTypeCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__TypeAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getTypeTypeCrossReference_4_2_0()); }
		(
			{ before(grammarAccess.getPrimaryExprAccess().getTypeTypeQualifiedNameParserRuleCall_4_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPrimaryExprAccess().getTypeTypeQualifiedNameParserRuleCall_4_2_0_1()); }
		)
		{ after(grammarAccess.getPrimaryExprAccess().getTypeTypeCrossReference_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__MemberAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getMemberSymbolCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getPrimaryExprAccess().getMemberSymbolIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryExprAccess().getMemberSymbolIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getPrimaryExprAccess().getMemberSymbolCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__MethodInvocationAssignment_5_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getMethodInvocationLeftParenthesisKeyword_5_2_0_0()); }
		(
			{ before(grammarAccess.getPrimaryExprAccess().getMethodInvocationLeftParenthesisKeyword_5_2_0_0()); }
			'('
			{ after(grammarAccess.getPrimaryExprAccess().getMethodInvocationLeftParenthesisKeyword_5_2_0_0()); }
		)
		{ after(grammarAccess.getPrimaryExprAccess().getMethodInvocationLeftParenthesisKeyword_5_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__ArgsAssignment_5_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getArgsExprParserRuleCall_5_2_1_0_0()); }
		ruleExpr
		{ after(grammarAccess.getPrimaryExprAccess().getArgsExprParserRuleCall_5_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__ArgsAssignment_5_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getArgsExprParserRuleCall_5_2_1_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getPrimaryExprAccess().getArgsExprParserRuleCall_5_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getConditionExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getIfAccess().getConditionExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__OnTrueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getOnTrueExprParserRuleCall_4_0()); }
		ruleExpr
		{ after(grammarAccess.getIfAccess().getOnTrueExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__OnFalseAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getOnFalseExprParserRuleCall_6_0()); }
		ruleExpr
		{ after(grammarAccess.getIfAccess().getOnFalseExprParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__BindingsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetAccess().getBindingsBindingParserRuleCall_1_0()); }
		ruleBinding
		{ after(grammarAccess.getLetAccess().getBindingsBindingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetAccess().getExprExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getLetAccess().getExprExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
