/*
 * generated by Xtext 2.11.0
 */
grammar InternalPaplj;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.metaborg.paplj.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.metaborg.paplj.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.metaborg.paplj.services.PapljGrammarAccess;

}

@parser::members {

 	private PapljGrammarAccess grammarAccess;

    public InternalPapljParser(TokenStream input, PapljGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected PapljGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='program'
			{
				newLeafNode(otherlv_0, grammarAccess.getProgramAccess().getProgramKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.metaborg.paplj.Paplj.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=';'
				{
					newLeafNode(otherlv_2, grammarAccess.getProgramAccess().getSemicolonKeyword_0_2());
				}
			)?
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getImportsImportParserRuleCall_1_0());
				}
				lv_imports_3_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"imports",
						lv_imports_3_0,
						"org.metaborg.paplj.Paplj.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getClassesTypeParserRuleCall_2_0());
				}
				lv_classes_4_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"classes",
						lv_classes_4_0,
						"org.metaborg.paplj.Paplj.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='run'
			{
				newLeafNode(otherlv_5, grammarAccess.getProgramAccess().getRunKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getExprExprParserRuleCall_3_1_0());
					}
					lv_expr_6_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						set(
							$current,
							"expr",
							lv_expr_6_0,
							"org.metaborg.paplj.Paplj.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"org.metaborg.paplj.Paplj.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='class'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeAccess().getClassKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTypeAccess().getSuperTypeTypeCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_4_0());
				}
				lv_members_5_0=ruleMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					add(
						$current,
						"members",
						lv_members_5_0,
						"org.metaborg.paplj.Paplj.Member");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	iv_ruleMember=ruleMember
	{ $current=$iv_ruleMember.current; }
	EOF;

// Rule Member
ruleMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMemberAccess().getFieldParserRuleCall_0());
		}
		this_Field_0=ruleField
		{
			$current = $this_Field_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getMethodParserRuleCall_1());
		}
		this_Method_1=ruleMethod
		{
			$current = $this_Method_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFieldAccess().getTypeTypeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getSemicolonKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMethodAccess().getTypeTypeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_3_0_0());
					}
					lv_params_3_0=ruleParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodRule());
						}
						add(
							$current,
							"params",
							lv_params_3_0,
							"org.metaborg.paplj.Paplj.Param");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_3_1_1_0());
						}
						lv_params_5_0=ruleParam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							add(
								$current,
								"params",
								lv_params_5_0,
								"org.metaborg.paplj.Paplj.Param");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getBodyBlock2ParserRuleCall_5_0());
				}
				lv_body_7_0=ruleBlock2
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"body",
						lv_body_7_0,
						"org.metaborg.paplj.Paplj.Block2");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	iv_ruleParam=ruleParam
	{ $current=$iv_ruleParam.current; }
	EOF;

// Rule Param
ruleParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParamAccess().getTypeTypeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBindingAccess().getTypeTypeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBindingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getBindingAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingAccess().getValueExprParserRuleCall_3_0());
				}
				lv_value_3_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.metaborg.paplj.Paplj.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock2
entryRuleBlock2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlock2Rule()); }
	iv_ruleBlock2=ruleBlock2
	{ $current=$iv_ruleBlock2.current; }
	EOF;

// Rule Block2
ruleBlock2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlock2Access().getBlock2Action_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlock2Access().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlock2Access().getExprsExprParserRuleCall_2_0_0());
					}
					lv_exprs_2_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlock2Rule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_2_0,
							"org.metaborg.paplj.Paplj.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getBlock2Access().getSemicolonKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBlock2Access().getExprsExprParserRuleCall_2_1_1_0());
						}
						lv_exprs_4_0=ruleExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBlock2Rule());
							}
							add(
								$current,
								"exprs",
								lv_exprs_4_0,
								"org.metaborg.paplj.Paplj.Expr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getBlock2Access().getSemicolonKeyword_3());
			}
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getBlock2Access().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExprAccess().getIfLetExprParserRuleCall());
	}
	this_IfLetExpr_0=ruleIfLetExpr
	{
		$current = $this_IfLetExpr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleIfLetExpr
entryRuleIfLetExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfLetExprRule()); }
	iv_ruleIfLetExpr=ruleIfLetExpr
	{ $current=$iv_ruleIfLetExpr.current; }
	EOF;

// Rule IfLetExpr
ruleIfLetExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIfLetExprAccess().getIfParserRuleCall_0());
		}
		this_If_0=ruleIf
		{
			$current = $this_If_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIfLetExprAccess().getLetParserRuleCall_1());
		}
		this_Let_1=ruleLet
		{
			$current = $this_Let_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIfLetExprAccess().getAssignmentExprParserRuleCall_2());
		}
		this_AssignmentExpr_2=ruleAssignmentExpr
		{
			$current = $this_AssignmentExpr_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssignmentExpr
entryRuleAssignmentExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentExprRule()); }
	iv_ruleAssignmentExpr=ruleAssignmentExpr
	{ $current=$iv_ruleAssignmentExpr.current; }
	EOF;

// Rule AssignmentExpr
ruleAssignmentExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAssignmentExprAccess().getLogicalOrExprParserRuleCall_0());
		}
		this_LogicalOrExpr_0=ruleLogicalOrExpr
		{
			$current = $this_LogicalOrExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			((
				(
				)
				'='
				(
					(
						ruleExpr
					)
				)
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAssignmentExprAccess().getAssignmentLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getAssignmentExprAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAssignmentExprAccess().getValueExprParserRuleCall_1_0_2_0());
						}
						lv_value_3_0=ruleExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAssignmentExprRule());
							}
							set(
								$current,
								"value",
								lv_value_3_0,
								"org.metaborg.paplj.Paplj.Expr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleLogicalOrExpr
entryRuleLogicalOrExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOrExprRule()); }
	iv_ruleLogicalOrExpr=ruleLogicalOrExpr
	{ $current=$iv_ruleLogicalOrExpr.current; }
	EOF;

// Rule LogicalOrExpr
ruleLogicalOrExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalOrExprAccess().getLogicalAndExprParserRuleCall_0());
		}
		this_LogicalAndExpr_0=ruleLogicalAndExpr
		{
			$current = $this_LogicalAndExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLogicalOrExprAccess().getOrLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='||'
				{
					newLeafNode(otherlv_2, grammarAccess.getLogicalOrExprAccess().getVerticalLineVerticalLineKeyword_1_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOrExprAccess().getRightLogicalAndExprParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleLogicalAndExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOrExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.metaborg.paplj.Paplj.LogicalAndExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalAndExpr
entryRuleLogicalAndExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalAndExprRule()); }
	iv_ruleLogicalAndExpr=ruleLogicalAndExpr
	{ $current=$iv_ruleLogicalAndExpr.current; }
	EOF;

// Rule LogicalAndExpr
ruleLogicalAndExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalAndExprAccess().getComparativeExprParserRuleCall_0());
		}
		this_ComparativeExpr_0=ruleComparativeExpr
		{
			$current = $this_ComparativeExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLogicalAndExprAccess().getAndLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='&&'
				{
					newLeafNode(otherlv_2, grammarAccess.getLogicalAndExprAccess().getAmpersandAmpersandKeyword_1_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalAndExprAccess().getRightComparativeExprParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleComparativeExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalAndExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.metaborg.paplj.Paplj.ComparativeExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparativeExpr
entryRuleComparativeExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparativeExprRule()); }
	iv_ruleComparativeExpr=ruleComparativeExpr
	{ $current=$iv_ruleComparativeExpr.current; }
	EOF;

// Rule ComparativeExpr
ruleComparativeExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparativeExprAccess().getAdditiveExprParserRuleCall_0());
		}
		this_AdditiveExpr_0=ruleAdditiveExpr
		{
			$current = $this_AdditiveExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparativeExprAccess().getEqLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='=='
					{
						newLeafNode(otherlv_2, grammarAccess.getComparativeExprAccess().getEqualsSignEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparativeExprAccess().getNeqLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='!='
					{
						newLeafNode(otherlv_4, grammarAccess.getComparativeExprAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparativeExprAccess().getLtLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6='<'
					{
						newLeafNode(otherlv_6, grammarAccess.getComparativeExprAccess().getLessThanSignKeyword_1_0_2_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparativeExprAccess().getRightAdditiveExprParserRuleCall_1_1_0());
					}
					lv_right_7_0=ruleAdditiveExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparativeExprRule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"org.metaborg.paplj.Paplj.AdditiveExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAdditiveExpr
entryRuleAdditiveExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExprRule()); }
	iv_ruleAdditiveExpr=ruleAdditiveExpr
	{ $current=$iv_ruleAdditiveExpr.current; }
	EOF;

// Rule AdditiveExpr
ruleAdditiveExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0());
		}
		this_MultiplicativeExpr_0=ruleMultiplicativeExpr
		{
			$current = $this_MultiplicativeExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditiveExprAccess().getAddLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getAdditiveExprAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditiveExprAccess().getSubLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getAdditiveExprAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMultiplicativeExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExprRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.metaborg.paplj.Paplj.MultiplicativeExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpr
entryRuleMultiplicativeExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExprRule()); }
	iv_ruleMultiplicativeExpr=ruleMultiplicativeExpr
	{ $current=$iv_ruleMultiplicativeExpr.current; }
	EOF;

// Rule MultiplicativeExpr
ruleMultiplicativeExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExprAccess().getUnaryExprParserRuleCall_0());
		}
		this_UnaryExpr_0=ruleUnaryExpr
		{
			$current = $this_UnaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicativeExprAccess().getMulLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getMultiplicativeExprAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicativeExprAccess().getDivLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getMultiplicativeExprAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExprAccess().getRightUnaryExprParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExprRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.metaborg.paplj.Paplj.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current; }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUnaryExprAccess().getMemberExprParserRuleCall_0_0());
			}
			this_MemberExpr_0=ruleMemberExpr
			{
				$current = $this_MemberExpr_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getUnaryExprAccess().getCastLeftAction_0_1_0_0(),
								$current);
						}
					)
					otherlv_2='as'
					{
						newLeafNode(otherlv_2, grammarAccess.getUnaryExprAccess().getAsKeyword_0_1_0_1());
					}
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExprRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getUnaryExprAccess().getTypeTypeCrossReference_0_1_1_0());
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExprAccess().getNotAction_1_0(),
						$current);
				}
			)
			otherlv_5='!'
			{
				newLeafNode(otherlv_5, grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_1_2_0());
					}
					lv_expr_6_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
						}
						set(
							$current,
							"expr",
							lv_expr_6_0,
							"org.metaborg.paplj.Paplj.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExprAccess().getMinAction_2_0(),
						$current);
				}
			)
			otherlv_8='-'
			{
				newLeafNode(otherlv_8, grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_2_2_0());
					}
					lv_expr_9_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
						}
						set(
							$current,
							"expr",
							lv_expr_9_0,
							"org.metaborg.paplj.Paplj.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMemberExpr
entryRuleMemberExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberExprRule()); }
	iv_ruleMemberExpr=ruleMemberExpr
	{ $current=$iv_ruleMemberExpr.current; }
	EOF;

// Rule MemberExpr
ruleMemberExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMemberExprAccess().getPrimaryExprParserRuleCall_0());
		}
		this_PrimaryExpr_0=rulePrimaryExpr
		{
			$current = $this_PrimaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			((
				(
				)
				'.'
				(
					(
						RULE_ID
					)
				)
				(
					(
						(
							'('
						)
					)
					(
						(
							(
								ruleExpr
							)
						)
						(
							','
							(
								(
									ruleExpr
								)
							)
						)*
					)?
					')'
				)?
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMemberExprAccess().getMemberRefLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='.'
				{
					newLeafNode(otherlv_2, grammarAccess.getMemberExprAccess().getFullStopKeyword_1_0_1());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMemberExprRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getMemberExprAccess().getMemberMemberCrossReference_1_0_2_0());
						}
					)
				)
				(
					(
						(
							lv_methodInvocation_4_0='('
							{
								newLeafNode(lv_methodInvocation_4_0, grammarAccess.getMemberExprAccess().getMethodInvocationLeftParenthesisKeyword_1_0_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMemberExprRule());
								}
								setWithLastConsumed($current, "methodInvocation", true, "(");
							}
						)
					)
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getMemberExprAccess().getArgsExprParserRuleCall_1_0_3_1_0_0());
								}
								lv_args_5_0=ruleExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getMemberExprRule());
									}
									add(
										$current,
										"args",
										lv_args_5_0,
										"org.metaborg.paplj.Paplj.Expr");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							otherlv_6=','
							{
								newLeafNode(otherlv_6, grammarAccess.getMemberExprAccess().getCommaKeyword_1_0_3_1_1_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getMemberExprAccess().getArgsExprParserRuleCall_1_0_3_1_1_1_0());
									}
									lv_args_7_0=ruleExpr
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getMemberExprRule());
										}
										add(
											$current,
											"args",
											lv_args_7_0,
											"org.metaborg.paplj.Paplj.Expr");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)*
					)?
					otherlv_8=')'
					{
						newLeafNode(otherlv_8, grammarAccess.getMemberExprAccess().getRightParenthesisKeyword_1_0_3_2());
					}
				)?
			)
		)*
	)
;

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	iv_rulePrimaryExpr=rulePrimaryExpr
	{ $current=$iv_rulePrimaryExpr.current; }
	EOF;

// Rule PrimaryExpr
rulePrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprAccess().getNumAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimaryExprAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExprRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprAccess().getBoolAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_true_3_0='true'
						{
							newLeafNode(lv_true_3_0, grammarAccess.getPrimaryExprAccess().getTrueTrueKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPrimaryExprRule());
							}
							setWithLastConsumed($current, "true", true, "true");
						}
					)
				)
				    |
				otherlv_4='false'
				{
					newLeafNode(otherlv_4, grammarAccess.getPrimaryExprAccess().getFalseKeyword_1_1_1());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprAccess().getThisAction_2_0(),
						$current);
				}
			)
			otherlv_6='this'
			{
				newLeafNode(otherlv_6, grammarAccess.getPrimaryExprAccess().getThisKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprAccess().getNullAction_3_0(),
						$current);
				}
			)
			otherlv_8='null'
			{
				newLeafNode(otherlv_8, grammarAccess.getPrimaryExprAccess().getNullKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExprRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getPrimaryExprAccess().getTypeTypeCrossReference_3_2_0());
					}
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprAccess().getNewAction_4_0(),
						$current);
				}
			)
			otherlv_11='new'
			{
				newLeafNode(otherlv_11, grammarAccess.getPrimaryExprAccess().getNewKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExprRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getTypeTypeCrossReference_4_2_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_4_3());
			}
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_4_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprAccess().getVarAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExprRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getPrimaryExprAccess().getMemberSymbolCrossReference_5_1_0());
					}
				)
			)
			(
				(
					(
						lv_methodInvocation_17_0='('
						{
							newLeafNode(lv_methodInvocation_17_0, grammarAccess.getPrimaryExprAccess().getMethodInvocationLeftParenthesisKeyword_5_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPrimaryExprRule());
							}
							setWithLastConsumed($current, "methodInvocation", true, "(");
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExprAccess().getArgsExprParserRuleCall_5_2_1_0_0());
							}
							lv_args_18_0=ruleExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
								}
								add(
									$current,
									"args",
									lv_args_18_0,
									"org.metaborg.paplj.Paplj.Expr");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_19=','
						{
							newLeafNode(otherlv_19, grammarAccess.getPrimaryExprAccess().getCommaKeyword_5_2_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPrimaryExprAccess().getArgsExprParserRuleCall_5_2_1_1_1_0());
								}
								lv_args_20_0=ruleExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
									}
									add(
										$current,
										"args",
										lv_args_20_0,
										"org.metaborg.paplj.Paplj.Expr");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_21=')'
				{
					newLeafNode(otherlv_21, grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_5_2_2());
				}
			)?
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExprAccess().getBlock2ParserRuleCall_6());
		}
		this_Block2_22=ruleBlock2
		{
			$current = $this_Block2_22.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_23='('
			{
				newLeafNode(otherlv_23, grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_7_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExprAccess().getExprParserRuleCall_7_1());
			}
			this_Expr_24=ruleExpr
			{
				$current = $this_Expr_24.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_25=')'
			{
				newLeafNode(otherlv_25, grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_7_2());
			}
		)
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getConditionExprParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.metaborg.paplj.Paplj.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getOnTrueExprParserRuleCall_4_0());
				}
				lv_onTrue_4_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"onTrue",
						lv_onTrue_4_0,
						"org.metaborg.paplj.Paplj.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='else'
		{
			newLeafNode(otherlv_5, grammarAccess.getIfAccess().getElseKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getOnFalseExprParserRuleCall_6_0());
				}
				lv_onFalse_6_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"onFalse",
						lv_onFalse_6_0,
						"org.metaborg.paplj.Paplj.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLet
entryRuleLet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetRule()); }
	iv_ruleLet=ruleLet
	{ $current=$iv_ruleLet.current; }
	EOF;

// Rule Let
ruleLet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getLetAccess().getLetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetAccess().getBindingsBindingParserRuleCall_1_0());
				}
				lv_bindings_1_0=ruleBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetRule());
					}
					add(
						$current,
						"bindings",
						lv_bindings_1_0,
						"org.metaborg.paplj.Paplj.Binding");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getLetAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetAccess().getExprExprParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"org.metaborg.paplj.Paplj.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
