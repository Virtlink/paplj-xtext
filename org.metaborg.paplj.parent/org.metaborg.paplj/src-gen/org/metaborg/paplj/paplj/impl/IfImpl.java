/**
 * generated by Xtext 2.11.0
 */
package org.metaborg.paplj.paplj.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.metaborg.paplj.paplj.Expr;
import org.metaborg.paplj.paplj.If;
import org.metaborg.paplj.paplj.PapljPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.metaborg.paplj.paplj.impl.IfImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link org.metaborg.paplj.paplj.impl.IfImpl#getOnTrue <em>On True</em>}</li>
 *   <li>{@link org.metaborg.paplj.paplj.impl.IfImpl#getOnFalse <em>On False</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfImpl extends ExprImpl implements If
{
  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected Expr condition;

  /**
   * The cached value of the '{@link #getOnTrue() <em>On True</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnTrue()
   * @generated
   * @ordered
   */
  protected Expr onTrue;

  /**
   * The cached value of the '{@link #getOnFalse() <em>On False</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnFalse()
   * @generated
   * @ordered
   */
  protected Expr onFalse;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PapljPackage.Literals.IF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondition(Expr newCondition, NotificationChain msgs)
  {
    Expr oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PapljPackage.IF__CONDITION, oldCondition, newCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCondition(Expr newCondition)
  {
    if (newCondition != condition)
    {
      NotificationChain msgs = null;
      if (condition != null)
        msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PapljPackage.IF__CONDITION, null, msgs);
      if (newCondition != null)
        msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PapljPackage.IF__CONDITION, null, msgs);
      msgs = basicSetCondition(newCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PapljPackage.IF__CONDITION, newCondition, newCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr getOnTrue()
  {
    return onTrue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOnTrue(Expr newOnTrue, NotificationChain msgs)
  {
    Expr oldOnTrue = onTrue;
    onTrue = newOnTrue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PapljPackage.IF__ON_TRUE, oldOnTrue, newOnTrue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOnTrue(Expr newOnTrue)
  {
    if (newOnTrue != onTrue)
    {
      NotificationChain msgs = null;
      if (onTrue != null)
        msgs = ((InternalEObject)onTrue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PapljPackage.IF__ON_TRUE, null, msgs);
      if (newOnTrue != null)
        msgs = ((InternalEObject)newOnTrue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PapljPackage.IF__ON_TRUE, null, msgs);
      msgs = basicSetOnTrue(newOnTrue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PapljPackage.IF__ON_TRUE, newOnTrue, newOnTrue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr getOnFalse()
  {
    return onFalse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOnFalse(Expr newOnFalse, NotificationChain msgs)
  {
    Expr oldOnFalse = onFalse;
    onFalse = newOnFalse;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PapljPackage.IF__ON_FALSE, oldOnFalse, newOnFalse);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOnFalse(Expr newOnFalse)
  {
    if (newOnFalse != onFalse)
    {
      NotificationChain msgs = null;
      if (onFalse != null)
        msgs = ((InternalEObject)onFalse).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PapljPackage.IF__ON_FALSE, null, msgs);
      if (newOnFalse != null)
        msgs = ((InternalEObject)newOnFalse).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PapljPackage.IF__ON_FALSE, null, msgs);
      msgs = basicSetOnFalse(newOnFalse, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PapljPackage.IF__ON_FALSE, newOnFalse, newOnFalse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PapljPackage.IF__CONDITION:
        return basicSetCondition(null, msgs);
      case PapljPackage.IF__ON_TRUE:
        return basicSetOnTrue(null, msgs);
      case PapljPackage.IF__ON_FALSE:
        return basicSetOnFalse(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PapljPackage.IF__CONDITION:
        return getCondition();
      case PapljPackage.IF__ON_TRUE:
        return getOnTrue();
      case PapljPackage.IF__ON_FALSE:
        return getOnFalse();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PapljPackage.IF__CONDITION:
        setCondition((Expr)newValue);
        return;
      case PapljPackage.IF__ON_TRUE:
        setOnTrue((Expr)newValue);
        return;
      case PapljPackage.IF__ON_FALSE:
        setOnFalse((Expr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PapljPackage.IF__CONDITION:
        setCondition((Expr)null);
        return;
      case PapljPackage.IF__ON_TRUE:
        setOnTrue((Expr)null);
        return;
      case PapljPackage.IF__ON_FALSE:
        setOnFalse((Expr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PapljPackage.IF__CONDITION:
        return condition != null;
      case PapljPackage.IF__ON_TRUE:
        return onTrue != null;
      case PapljPackage.IF__ON_FALSE:
        return onFalse != null;
    }
    return super.eIsSet(featureID);
  }

} //IfImpl
