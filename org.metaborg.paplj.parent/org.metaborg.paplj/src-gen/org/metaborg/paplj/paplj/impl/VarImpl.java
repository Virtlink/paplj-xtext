/**
 * generated by Xtext 2.11.0
 */
package org.metaborg.paplj.paplj.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.metaborg.paplj.paplj.Expr;
import org.metaborg.paplj.paplj.PapljPackage;
import org.metaborg.paplj.paplj.Symbol;
import org.metaborg.paplj.paplj.Var;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Var</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.metaborg.paplj.paplj.impl.VarImpl#getMember <em>Member</em>}</li>
 *   <li>{@link org.metaborg.paplj.paplj.impl.VarImpl#isMethodInvocation <em>Method Invocation</em>}</li>
 *   <li>{@link org.metaborg.paplj.paplj.impl.VarImpl#getArgs <em>Args</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VarImpl extends ExprImpl implements Var
{
  /**
   * The cached value of the '{@link #getMember() <em>Member</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMember()
   * @generated
   * @ordered
   */
  protected Symbol member;

  /**
   * The default value of the '{@link #isMethodInvocation() <em>Method Invocation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMethodInvocation()
   * @generated
   * @ordered
   */
  protected static final boolean METHOD_INVOCATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMethodInvocation() <em>Method Invocation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMethodInvocation()
   * @generated
   * @ordered
   */
  protected boolean methodInvocation = METHOD_INVOCATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getArgs() <em>Args</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgs()
   * @generated
   * @ordered
   */
  protected EList<Expr> args;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VarImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PapljPackage.Literals.VAR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Symbol getMember()
  {
    if (member != null && member.eIsProxy())
    {
      InternalEObject oldMember = (InternalEObject)member;
      member = (Symbol)eResolveProxy(oldMember);
      if (member != oldMember)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PapljPackage.VAR__MEMBER, oldMember, member));
      }
    }
    return member;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Symbol basicGetMember()
  {
    return member;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMember(Symbol newMember)
  {
    Symbol oldMember = member;
    member = newMember;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PapljPackage.VAR__MEMBER, oldMember, member));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isMethodInvocation()
  {
    return methodInvocation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMethodInvocation(boolean newMethodInvocation)
  {
    boolean oldMethodInvocation = methodInvocation;
    methodInvocation = newMethodInvocation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PapljPackage.VAR__METHOD_INVOCATION, oldMethodInvocation, methodInvocation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Expr> getArgs()
  {
    if (args == null)
    {
      args = new EObjectContainmentEList<Expr>(Expr.class, this, PapljPackage.VAR__ARGS);
    }
    return args;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PapljPackage.VAR__ARGS:
        return ((InternalEList<?>)getArgs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PapljPackage.VAR__MEMBER:
        if (resolve) return getMember();
        return basicGetMember();
      case PapljPackage.VAR__METHOD_INVOCATION:
        return isMethodInvocation();
      case PapljPackage.VAR__ARGS:
        return getArgs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PapljPackage.VAR__MEMBER:
        setMember((Symbol)newValue);
        return;
      case PapljPackage.VAR__METHOD_INVOCATION:
        setMethodInvocation((Boolean)newValue);
        return;
      case PapljPackage.VAR__ARGS:
        getArgs().clear();
        getArgs().addAll((Collection<? extends Expr>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PapljPackage.VAR__MEMBER:
        setMember((Symbol)null);
        return;
      case PapljPackage.VAR__METHOD_INVOCATION:
        setMethodInvocation(METHOD_INVOCATION_EDEFAULT);
        return;
      case PapljPackage.VAR__ARGS:
        getArgs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PapljPackage.VAR__MEMBER:
        return member != null;
      case PapljPackage.VAR__METHOD_INVOCATION:
        return methodInvocation != METHOD_INVOCATION_EDEFAULT;
      case PapljPackage.VAR__ARGS:
        return args != null && !args.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (methodInvocation: ");
    result.append(methodInvocation);
    result.append(')');
    return result.toString();
  }

} //VarImpl
